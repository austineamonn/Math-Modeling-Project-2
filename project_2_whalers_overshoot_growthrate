% This is intended to give an output of graphs relating population 
% and profit to time. There are two points that I know of that makes
% it false though. Could be a framework to edit off of, could just be
% a draft that gets discarded when we make a better one.

syms x y 

percent_overkilled = 10 ;
r_1 = 0.05 ;
r_2 = 0.08 ;
k_1 = 150000 ;
k_2 = 400000 ;
a_1 = 10.^(-8) ;
a_2 = 10.^(-8) ;

dx_dt = 12000.*(r_1.*x.*(1-(x./k_1)) - a_1.*x.*y) ;
dy_dt = 6000.*(r_2.*y.*(1-(y./k_2)) - a_2.*x.*y) ;
T = dx_dt + dy_dt ;
T_x_t = diff(T,x) ;
T_y_t = diff(T,y) ;

% pause to manually create matrix? --> there's definitely a way to do this
% better, but my brain doesn't have that capacity right now. Maybe just set
% it up as a system of equations rather than a matrix?

A = [-1./125 -9./50000 ; -9./50000 -3./1250] ;
b = [-600; -480] ;

inflection_point = A\b ;

n = 100 ; % number of iterations
blue_pop = zeros(1,n) ; % initialize array to store results
fin_pop = zeros(1,n) ;
tot_pop = zeros(1,n) ;
blue_price = zeros(1,n) ;
fin_price = zeros(1,n) ;
tot_price = zeros(1,n) ;

% the populations at which the profit is maximized
x_inflection = inflection_point(1) ;
y_inflection = inflection_point(2) ;
total_population = x_inflection + y_inflection ;

% the natural population change at which profit is maximized
    dx_dt = subs(dx_dt, x, x_inflection) ;
    dx_dt = subs(dx_dt, y, y_inflection) ;
    dy_dt = subs(dy_dt, x, x_inflection) ;
    dy_dt = subs(dy_dt, y, y_inflection) ;

for t = 1:n
    % I think this is wrong, the dx_dt and dy_dt should change as the
    % populations do. I think this could easily-ish be fixed if the matrix
    % creation was automized
    blue_pop(t) = x_inflection - (t-1).*dx_dt.*(1+(percent_overkilled./100)) + (t-1).*dx_dt ;
    fin_pop(t) = y_inflection - (t-1).*dy_dt.*(1+(percent_overkilled./100)) + (t-1).*dy_dt;
    tot_pop(t) = blue_pop(t) + fin_pop(t) ;

    dx_dt = r_1.*(blue_pop(t)).*(1-(blue_pop(t))./k_1)-a_1.*blue_pop(t).*fin_pop(t) ;
    dy_dt = r_2.*(fin_pop(t)).*(1-(fin_pop(t))./k_2)-a_2.*blue_pop(t).*fin_pop(t) ;
    T = dx_dt + dy_dt ;

    price_blues = 12000.*dx_dt .*(1+(percent_overkilled./100));
    blue_price(t) = price_blues ;
    price_fins = 6000.*dy_dt .*(1+(percent_overkilled./100));
    fin_price(t) = price_fins ;
    total_yearly_price = price_blues + price_fins ;
    tot_price(t) = total_yearly_price ;

end

figure

subplot(2,1,1)
plot(1:n, blue_pop, '-o', 'DisplayName', 'blue whale population') ;
hold on
plot(1:n, fin_pop, '-o', 'DisplayName', 'fin whale population') ;
plot(1:n, tot_pop, '-o', 'DisplayName', 'total whale population') ;
hold off
xlabel('Time');
ylabel('Population');
title('Whale Population Over Time')
legend;

subplot(2,1,2)
plot(1:n, blue_price, '-o', 'DisplayName', 'blue whaler income') ;
hold on
plot(1:n, fin_price, '-o', 'DisplayName', 'fin whaler income') ;
plot(1:n, tot_price, '-o', 'DisplayName', 'total whaler income') ;
hold off
xlabel('Time');
ylabel('Income');
title('Whaler Income Over Time')
legend;
