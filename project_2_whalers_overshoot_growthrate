% this seems to be right?? but anything over n=10 doesn't seem to work if there is any overestimation.

syms x y

% one possible way to measure the sensitivity of our results (specifically
% the sensitivity of the populations and profits over time dependent on how
% accurately the whalers estimate the growth rate of the whales in a given year)
percent_overestimated = 0 ; 

n = 25 ; % number of iterations/years predicted over

% parameters, as provided in the instructions
    r_1 = 0.05 ;
    r_2 = 0.08 ;
    k_1 = 150000 ;
    k_2 = 400000 ;
    a_1 = 10.^(-8) ;
    a_2 = 10.^(-8) ;

% initialize arrays to store results
    blue_pop = zeros(1,n) ; 
    fin_pop = zeros(1,n) ;
    tot_pop = zeros(1,n) ;
    blue_price = zeros(1,n) ;
    fin_price = zeros(1,n) ;
    tot_price = zeros(1,n) ;

% original whale population levels
blue_whale_population = 70619 ;
fin_whale_population = 194703 ;

for t = 1:n

    % whale general growth functions, as provided
    dx_dt = (r_1.*x.*(1-(x./k_1)) - a_1.*x.*y) ;
    dy_dt = (r_2.*y.*(1-(y./k_2)) - a_2.*x.*y) ;

    % in the case where whalers are only killing as many whales as the 
    % populations grew that year, these would be their revenue
    cost_dx_dt = 12000.*dx_dt ;
    cost_dy_dt = 6000.* dy_dt;
    
    cost_Total = cost_dx_dt + cost_dy_dt ;

    % setting up the gradient to solve for the populations x,y that maximize
    % cost_Total
    T_x_t = diff(cost_Total,x) ;
    T_y_t = diff(cost_Total,y) ;

    x_comp_cost_T = T_x_t == 0 ;
    y_comp_cost_T = T_y_t == 0 ;

    % solve the system of equations
    sol = solve([x_comp_cost_T , y_comp_cost_T], [x,y]) ;

    % extract the x and y values, the populations at which whalers get the
    % maximum possible profit
    sol_struct = struct(sol);
    x_max_profit = sol_struct.x ;
    y__max_profit = sol_struct.y ;

    % calculate the actual numerical values for dx_dt and dy_dt 
    % based on the current population levels
    actual_dx_dt = subs(dx_dt, [x,y], [blue_whale_population, fin_whale_population]) ;
    actual_dy_dt = subs(dy_dt, [x,y], [blue_whale_population, fin_whale_population]) ;

    % incorrect whale populations based on overestimation
    %b_w_pop_overestimation = blue_whale_population.*(1+(percent_overestimated./100));
    %f_w_pop_overestimation = fin_whale_population.*(1+(percent_overestimated./100));

    % calculate the whaler's estimated numerical values for dx_dt and dy_dt 
    % based on the current population levels
    dx_dt = subs(dx_dt, [x,y], [blue_whale_population.*(1+(percent_overestimated./100)), fin_whale_population.*(1+(percent_overestimated./100))]) ;
    dy_dt = subs(dy_dt, [x,y], [blue_whale_population.*(1+(percent_overestimated./100)), fin_whale_population.*(1+(percent_overestimated./100))]) ;
    
    % the whalers would probably want to kill the number of whales that would let
    % them reach the whale population levels that will provide them with
    % the maximum profit next year
    % the whaler's profit this iteration
    blues_killed = dx_dt + x - x_max_profit;
    blues_killed = subs(blues_killed, x, (blue_whale_population.*(1+(percent_overestimated./100))));
    price_blues = 12000.*blues_killed;
    blue_price(t) = price_blues ;
    
    fins_killed = dy_dt + y - y__max_profit;
    fins_killed = subs(fins_killed, y, (fin_whale_population.*(1+(percent_overestimated./100))));
    price_fins = 6000.*fins_killed;
    fin_price(t) = price_fins ;
    
    total_yearly_price = price_blues + price_fins ;
    tot_price(t) = total_yearly_price ;

    % the whale populations at the start of this iteration
    blue_pop(t) = blue_whale_population ;
    fin_pop(t) = fin_whale_population ;
    tot_pop(t) = blue_pop(t) + fin_pop(t) ;

    % possibly starting the next iteration with a different population level
    blue_whale_population = blue_whale_population - blues_killed +  actual_dx_dt;
    fin_whale_population = fin_whale_population - fins_killed + actual_dy_dt ;

end

figure

subplot(2,1,1)
plot(1:n, blue_pop, '-o', 'DisplayName', 'blue whale population') ;
hold on
plot(1:n, fin_pop, '-o', 'DisplayName', 'fin whale population') ;
plot(1:n, tot_pop, '-o', 'DisplayName', 'total whale population') ;
hold off
xlabel('Time');
ylabel('Population');
title('Whale Population Over Time')
legend;

subplot(2,1,2)
plot(1:n, blue_price, '-o', 'DisplayName', 'blue whaler income') ;
hold on
plot(1:n, fin_price, '-o', 'DisplayName', 'fin whaler income') ;
plot(1:n, tot_price, '-o', 'DisplayName', 'total whaler income') ;
hold off
xlabel('Time');
ylabel('Income');
title('Whaler Income Over Time')
legend;
